# @package _global_

defaults:
  - base
  - override /model: option_retriever
  - override /model/bert: pubmed
  - override /model/module/retriever_head: colbert
  - override /model/module/reader_head: colbert
  - override /model/module/gradients: in_batch # todo!!!!
  - override /datamodule/builder: concat_openqa
  - override /datamodule/index_builder: ${model/module/retriever_head}
  - override /datamodule/sampler: priority # TODO!!!!!
  - override /datamodule/transform: none
  - override /datamodule/relevance_classifier: none
  - override /datamodule/dataset_filter: none
  - override /datamodule/builder/analytics:
      - retriever_accuracy
      - sequence_lengths
      - retriever_distribution
      - log_retrieved_documents
  - override /logger: wandb
  - override /callbacks:
      - checkpoint
      - lr_monitor
      - log_predictions

base:
  seed: 633830320 # todo!!!!!
  target_metric: validation/reader/Accuracy
  target_mode: max
  is_search: false
  exp_info: "Colbert + in batch + priority + update every 10 epochs"

trainer:
  gpus: 8
  strategy: dp
  min_epochs: 1
  max_epochs: 1_000
  gradient_clip_val: 0.5
  accumulate_grad_batches: 4
  val_check_interval: 0.5

model:
  lr: 1e-5
  weight_decay: 1e-3
  num_warmup_steps: 1_000
  num_training_steps: 50_000
  bert:
    config:
      hidden_dropout_prob: 0.1
      attention_probs_dropout_prob: 0.1
  module:
    resample_k: null
    alpha: 0
    max_batch_size: 200
    retriever_head:
      use_mask: false
    reader_head:
      use_mask: false
    gradients:
      use_baseline: false # todo

datamodule:
  # how often to map the dataset
  dataset_update:
    freq: 10
    reset_optimizer: false
    index_first_epoch: false
    builder_args:
      relevance_classifier: null

  # dataloader
  train_batch_size: 8
  eval_batch_size: 32
  num_workers: 8
  pin_memory: true

  # dataset builder
  use_subset: false
  corpus_subset: false
  num_proc: 8
  output_columns:
    - answer.target
    - question.input_ids
    - question.attention_mask
    - document.input_ids
    - document.attention_mask
    - document.row_idx
    - document.match_score
    - document.retrieval_score
    - document.retrieval_rank

  # documents: retrieval & sampling
  n_retrieved_documents: 1000 # todo
  n_documents:
    train: 10
    validation: 10
    test: 10

  # tag documents as positive or negative
  #  relevance_classifier:
  #    interpretable: false

  # document sampler
  sampler:
    total: ${datamodule.n_documents}
    temperature: 1
    largest:
      train: false
      validation: true
      test: true # todo:

  # OpenQA builder parameters
  builder:
    batch_size: 100
    writer_batch_size: 1_000
    dataset_builder:
      dset_name: medqa-us
      query_expansion: null
      n_query_tokens: 1
      max_length: 512
    corpus_builder:
      use_subset: ${datamodule.corpus_subset}
      passage_length: 200
      passage_stride: 100

  # Index parameters
  index_builder:
    es_temperature: 1.
    model_output_keys: [ _hq_, _hd_ ]
    keep_maxsim_on_cpu: false
    faiss_train_size: 1_000_000
    p: 100
    dtype: float32
    max_chunksize: null
    maxsim_chunksize: 4_000
    persist_cache: false
    faiss_args:
      factory: IVF100,PQ16x8
      metric_type: 0 # == faiss.METRIC_INNER_PRODUCT
      nprobe: 16
    loader_kwargs:
      batch_size: 4_000
      num_workers: 16
      pin_memory: true


logger:
  wandb:
    group: option-retriever
